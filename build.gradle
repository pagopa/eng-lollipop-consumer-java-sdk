plugins {
	id 'java'
	id 'org.graalvm.buildtools.native' version '0.9.20'
	id("com.diffplug.spotless") version "6.17.0"
	id("nebula.lint") version "18.0.3"
	id("org.kordamp.gradle.reproducible") version "0.50.0"
}

repositories {
	mavenCentral()
	gradlePluginPortal()
}

allprojects {
	version = "1.0.0-SNAPSHOT"
	group = 'it.pagopa.tech.lollipop-consumer-java-sdk'
	sourceCompatibility = '11'
	targetCompatibility = '11'
	apply plugin: 'com.diffplug.spotless'
	apply plugin: 'nebula.lint'
	gradleLint.rules = ['all-dependency']

	configurations {
		spotless {
			resolutionStrategy {
				disableDependencyVerification()
			}
		}
		gradleLint {
			resolutionStrategy {
				disableDependencyVerification()
			}
		}
		gradleEnterprise {
			resolutionStrategy {
				disableDependencyVerification()
			}
		}
	}

	spotless {
		// optional: limit format enforcement to just the files changed by this feature branch
		ratchetFrom 'origin/main'

		format 'misc', {
			// define the files to apply `misc` to
			target '*.gradle', '*.md', '.gitignore'

			// define the steps to apply to those files
			trimTrailingWhitespace()
			indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
			endWithNewline()
		}
		java {
			// don't need to set target, it is inferred from java

			// apply a specific flavor of google-java-format
			googleJavaFormat('1.15.0').aosp().reflowLongStrings()
			// fix formatting of type annotations
			formatAnnotations()
			// make sure every file has the following copyright header.
			// optionally, Spotless can set copyright years by digging
			// through git history (see "license" section below)
			licenseHeader '/* (C)$YEAR */'
		}
	}
}


// Settings for allowing reproducible build
tasks.withType(AbstractArchiveTask).configureEach {
	preserveFileTimestamps = false
	reproducibleFileOrder = true
}


subprojects {

	apply plugin: 'java'
	apply plugin: 'org.kordamp.gradle.reproducible'
	apply plugin: 'maven-publish'
	apply plugin: 'org.graalvm.buildtools.native'


	java {
		withSourcesJar()
		withJavadocJar()
	}

	tasks.withType(JavaCompile) {
		options.compilerArgs.add('-Xlint:all')
	}

	config {
		reproducible {
			enabled
			additionalProperties
			additionalArtifacts
		}
	}

	// Settings for allowing reproducible build
	tasks.withType(AbstractArchiveTask).configureEach {
		preserveFileTimestamps = false
		reproducibleFileOrder = true
	}


	// Generate MD5 checksum on eng-lollipop-consumer-java-sdk jar file
	jar.doLast { task ->
		ant.checksum file: task.archivePath
	}

	publishing {
		publications {
			maven(MavenPublication) {
				groupId project.group
				artifactId project.name
				version project.version
				from components.java
			}
		}
		repositories {
			maven {
				name = "GitHubPackages"
				url = "https://maven.pkg.github.com/pagopa/eng-lollipop-consumer-java-sdk"
				credentials {
					username = System.getenv("GITHUB_ACTOR")
					password = System.getenv("GITHUB_TOKEN")
				}
			}
		}
	}

}

graalvmNative {
	binaries {
		main {
			sharedLibrary=true
		}
	}
}
